<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    meta(name="viewport" content="width=device-width, initial-scale=1.0")
    <link href="static/css/fontawesome.min.css" rel="stylesheet"> <!--load all styles -->
    <link rel="stylesheet" href="static/css/style.css">
    link(rel="shortcut icon", href="/static/favicon.ico", type="image/x-icon")
    script(src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.min.js" integrity="sha512-d9xgZrVZpmmQlfonhQUvTR7lMPtO7NkZMkA0ABN3PHCbKA5nqylQ/yWlFAyY6hYgdF1Qh6nYiuADWwKB4C2WSw==" crossorigin="anonymous")
    script(src="/static/js/date.utils.js")

    <title>Personal-Finances</title>
</head>
<body>
    <div class="container">
        include layouts/header.pug
        include layouts/sidemenu.pug
        include layouts/modalAddRevenue.pug
        include layouts/modalAddExpense.pug

        <div class="inner">
            <div class="row">
                <div class="mini-card balance">
                    <div class="mini-card-icon-container">
                        <i class="fas fa-landmark"></i>
                    </div>
                    <div class="mini-card-body">
                        <label class="mini-card-title">Saldo atual</label>
                        <span id="currentBalance">R$ #{currentMoney}</span>
                    </div>                    
                </div>
                <div class="mini-card  revenue">
                    <div class="mini-card-icon-container">
                        <i class="fas fa-hand-holding-usd"></i>
                    </div>                    
                    <div class="mini-card-body">
                        <label class="mini-card-title">Receitas</label>
                        <span id="revenuesSum">R$ #{revenuesCurrentMonthSum}</span>
                    </div>                    
                </div>
                <div class="mini-card expense">
                    <div class="mini-card-icon-container">
                        <i class="fas fa-receipt"></i>
                    </div>                    
                    <div class="mini-card-body">
                        <label class="mini-card-title">Despesas</label>
                        <span id="expensesSum">R$ #{expensesCurrentMonthSum}</span>
                    </div>                 
                </div>
                <div class="mini-card profit">
                    <div class="mini-card-icon-container">
                        <i class="fas fa-piggy-bank"></i>
                    </div>                    
                    <div class="mini-card-body">
                        <label class="mini-card-title">Balanço</label>
                        <span id="">R$ #{balance}</span>
                    </div>                          
                </div>
            </div>
            <div class="row">
                <div class="card">
                    <label class="card-title">Despesas do mês</label>
                    canvas#expensesCurrentMonth
                </div>
                <div class="card">
                    <label class="card-title">Receitas do mês</label>
                    canvas#revenuesCurrentMonth
                </div>
            </div>

            <button class="add-transaction" onclick="showAddTransaction()">
                <i class="fas fa-plus"></i>
            </button>
            <button class="add-revenue" onclick="openModalRevenue()">
                <i class="fas fa-hand-holding-usd"></i>
            </button>
            <button class="add-expense" onclick="openModalExpense()">
                <i class="fas fa-receipt"></i>
            </button>
        
        </div>
    </div>
    <script src="/static/js/script.js"></script>
    script.
        var ctxExpensesCurrentMonth = document.getElementById("expensesCurrentMonth");
        var ctxRevenuesCurrentMonth = document.getElementById("revenuesCurrentMonth");
        
        var expenses = !{JSON.stringify(expensesCurrentMonth)};
        var revenues = !{JSON.stringify(revenuesCurrentMonth)};

        var expensesByDate = {};
        var revenuesByDate = {};

        for(let expense of expenses) {
            let key = getFormatedDate(expense.date);

            if (!expensesByDate[key]) {
                expensesByDate[key] = expense.value;
            } else {
                expensesByDate[key] += expense.value;
            }
        }

        for(let revenue of revenues) {
            let key = getFormatedDate(revenue.date);

            if (!revenuesByDate[key]) {
                revenuesByDate[key] = revenue.value;
            } else {
                revenuesByDate[key] += revenue.value;
            }
        }

        var revenuesByDateSorted = Object.keys(revenuesByDate).sort(compareDates).map(key => [key, revenuesByDate[key]]);

        var expensesByDateSorted = Object.keys(expensesByDate).sort(compareDates).map(key => [key, expensesByDate[key]]);

        var expenseChart = new Chart(ctxExpensesCurrentMonth, {
            type: 'line',
            data: {
                labels: expensesByDateSorted.map(expense => expense[0]),
                datasets: [{
                    label: "Despesa/data",
                    data: expensesByDateSorted.map(expense => expense[1]),
                    backgroundColor: 'rgba(255, 99, 132, 0.4)'
                }]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                }
            }
        });

        var revenuesChart = new Chart(ctxRevenuesCurrentMonth, {
            type: 'line',
            data: {
                labels: revenuesByDateSorted.map(revenue => revenue[0]),
                datasets: [{
                    label: "Receita por data",
                    data: revenuesByDateSorted.map(revenue => revenue[1]),
                    backgroundColor: 'rgba(50, 168, 82, 0.4)'
                }]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                }
            }
        });
</body>
</html>